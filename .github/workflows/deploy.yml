name: Deploy Statsbook to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pipenv virtualenv
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install Pipenv
        run: pip install pipenv
      - name: Install dependencies
        # Use --deploy to ensure Pipfile.lock is up-to-date.
        # The --skip-lock is safe here because we check in Pipfile.lock.
        run: pipenv install --deploy --skip-lock
      - name: Restore data cache
        uses: actions/cache@v4
        id: data-cache
        with:
          path: |
            data/
            cache/
          key: ${{ runner.os }}-data-cache
      - name: Create .env file from multi-line secret
        run: echo "${{ secrets.YAHOO_ENV_FILE }}" > .env
      - name: Build the static site
        # Always force a refresh on deployment to get the latest stats
        run: pipenv run python build_site.py --force-refresh
      - name: (Debug) List generated files
        if: always() # This ensures the step runs even if the build fails
        run: ls -R
      - name: (Debug) Upload data and cache directories
        uses: actions/upload-artifact@v4
        with:
          name: debug-data-and-cache
          path: |
            data/
            cache/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4